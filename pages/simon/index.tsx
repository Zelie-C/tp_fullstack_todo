import Head from "next/head"
import styles from "@/styles/Home.module.css"
import { Inter } from "next/font/google"
import { useCallback, useEffect, useMemo, useState } from "react"
import Colorbox from "@/components/colorbox"

const inter = Inter({ subsets: ["latin"] })

const arrayColor = ["yellow", "red", "green", "blue"]
const randomColor = () => {
    let randomNumber = Math.floor(Math.random() * 4)
    return arrayColor[randomNumber]
}

const SimonGame = () => {
    const [sequence, setSequence] = useState<string[]>(["red", "yellow"])
    const [position, setPosition] = useState<number>(0)
    const [isComputer, setIsComputer] = useState<boolean>(true)
    
    const colorToLight = useMemo(
        () => {
            return sequence[position]
        }, [sequence, position])

    useEffect(
        () => {
            if(isComputer){
                if (position < sequence.length){
                    setTimeout(() => {
                        setTimeout(
                            () => {
                                setPosition(position + 1)
                                console.log("position dans timeout", position)
                            }, 1000)
                    }, 500)
                }
                else {
                    setIsComputer(false)
                    setPosition(0)
                    console.log("position aprÃ¨s timeout", position)
                }
            }
        }, [position, sequence.length, isComputer]
    )

    const handleColorClick = useCallback(
        (clickedColor: string) => {
            if (clickedColor === colorToLight) {
                if (position === sequence.length - 1) {
                    const newColorArray = [...sequence, randomColor()]
                    console.log(newColorArray)
                    setSequence(newColorArray)
                    setPosition(0)
                    setIsComputer(true)
                } 
                else {
                    setPosition(position + 1)
                }                
            } 
            else {
                setPosition(0)
                const newGame = [randomColor()]
                setSequence(newGame)
                setIsComputer(true)
            }
            
            
        }, [position, sequence, isComputer]
    )

 

    return (
        <>
            <Head>
                <title>Jeu du Simon</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className={`${styles.main} ${inter.className}`}>
                <h1 className={`${styles.title}`}>Jeu du simon</h1>
                <div className={`${styles.gameContainer}`}>
                    {arrayColor.map(
                        (color, index) => (
                            <Colorbox key={index} onClick={() => handleColorClick(color)} color={color} isComputer={isComputer} colorToLight={colorToLight}/>
                        )
                    )}
                </div>
            </main>
        </>
    )
}

export default SimonGame